{"code":"!function(e){var t={};function s(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var a in e)s.d(i,a,function(t){return e[t]}.bind(null,a));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,\"a\",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p=\"/build/\",s(s.s=0)}([function(e,t,s){\"use strict\";s.r(t);class i{constructor(e,t,s,i){this.scene=e;const a=e.anims;this.sprite=e.physics.add.sprite(t,s,\"player\",0).setDrag(1e3,0).setMaxVelocity(300,400).setSize(32,64).setOffset(0,0),this.isDying=!1,this.isDead=!1,this.isPewStriding=!1,this.maxHealth=i,this.health=i,this.healthBarWidth=50,this.timeSinceLastDamage=100,this.graphics=e.add.graphics({lineStyle:{width:10,color:65280}}),this.healthBar=new Phaser.Geom.Line(this.sprite.x-20,this.sprite.y-this.sprite.height/2-16,this.sprite.x+20,this.sprite.y-this.sprite.height/2-16);const{LEFT:r,RIGHT:h,UP:n,W:l,A:p,D:o}=Phaser.Input.Keyboard.KeyCodes;this.keys=e.input.keyboard.addKeys({left:r,right:h,up:n,w:l,a:p,d:o}),a.create({key:\"still\",frames:a.generateFrameNumbers(\"player\",{start:0,end:1}),frameRate:2,repeat:-1}),a.create({key:\"walk\",frames:a.generateFrameNumbers(\"player\",{start:2,end:3}),frameRate:4,repeat:-1}),this.healthBar=new Phaser.Geom.Line(this.sprite.x-20,this.sprite.y-this.sprite.height/2,this.sprite.x+20,this.sprite.y-this.sprite.height/2),this.graphics.strokeLineShape(this.healthBar)}update(e){const{keys:t,sprite:s}=this,i=s.body.blocked.down,a=i?this.isPewStriding?1200:600:200;this.isPewStriding?s.setMaxVelocity(600,800):s.setMaxVelocity(300,400),t.left.isDown||t.a.isDown?(s.setAccelerationX(-a),s.anims.play(\"walk\",!0),s.setFlipX(!0)):t.right.isDown||t.d.isDown?(s.setAccelerationX(a),s.setFlipX(!1),s.anims.play(\"walk\",!0)):(s.setAccelerationX(0),s.anims.play(\"still\",!0)),i&&(t.up.isDown||t.w.isDown)&&s.setVelocityY(this.isPewStriding?-700:-500),e&&6==e.index?this.isPewStriding=!0:e&&6!=e.index&&(this.isPewStriding=!1),this.graphics.clear(),Phaser.Geom.Line.CenterOn(this.healthBar,this.sprite.x,this.sprite.y-this.sprite.height/2-16);const r=Phaser.Display.Color.HSVColorWheel();this.graphics.lineStyle(10,r[Math.floor(this.health/this.maxHealth*128)].color),this.healthBar.x1=this.sprite.x-this.healthBarWidth/2,this.healthBar.x2=s.x-this.healthBarWidth/2+this.health/this.maxHealth*this.healthBarWidth,this.graphics.strokeLineShape(this.healthBar),0==this.health&&this.die(),this.timeSinceLastDamage<100&&this.timeSinceLastDamage++}takeDamage(e){this.timeSinceLastDamage>20&&(this.health-=e,this.timeSinceLastDamage=0),this.health<0&&(this.health=0)}die(){this.isDying||(this.isDying=!0,this.scene.cameras.main.fadeOut(1e3),this.scene.cameras.main.once(\"camerafadeoutcomplete\",()=>{this.isDead=!0}))}}class a{constructor(e,t,s,i,a){this.scene=e,this.sprite=e.physics.add.sprite(t,s,i,0).setDrag(1e3,0).setMaxVelocity(300,400).setSize(32,64).setOffset(0,0),this.maxHealth=a,this.health=a,this.healthBarWidth=50,this.graphics=e.add.graphics({lineStyle:{width:10,color:65280}}),this.healthBar=new Phaser.Geom.Line(this.sprite.x-20,this.sprite.y-this.sprite.height/2-16,this.sprite.x+20,this.sprite.y-this.sprite.height/2-16)}create(){this.isDying=!1,this.isPewStriding=!1,this.isJumping=!1,this.scene.anims.create({key:\"priestStill\",frames:anims.generateFrameNumbers(priestSprite,{start:0,end:1}),frameRate:2,repeat:-1}),this.healthBar=new Phaser.Geom.Line(sprite.x-20,sprite.y-sprite.height/2,sprite.x+20,sprite.y-sprite.height/2),this.graphics.strokeLineShape(this.healthBar)}update(e){const{keys:t,sprite:s}=this;s.body.blocked.down&&this.isPewStriding;this.isPewStriding?s.setMaxVelocity(600,800):s.setMaxVelocity(300,400),this.scene.anims.play(\"priestStill\",!0),this.isJumping=!1,this.isJumping&&s.setVelocityY(this.isPewStriding?-700:-500),this.moveTowardsPlayer(e),this.graphics.clear(),Phaser.Geom.Line.CenterOn(this.healthBar,this.sprite.x,this.sprite.y-this.sprite.height/2-16);const i=Phaser.Display.Color.HSVColorWheel();this.graphics.lineStyle(10,i[Math.floor(this.health/this.maxHealth*128)].color),this.healthBar.x1=this.sprite.x-this.healthBarWidth/2,this.healthBar.x2=s.x-this.healthBarWidth/2+this.health/this.maxHealth*this.healthBarWidth,this.graphics.strokeLineShape(this.healthBar),this.health>0?this.health-=.5:this.health=this.maxHealth}moveTowardsPlayer(e){e.sprite.x<this.sprite.x?this.sprite.setAccelerationX(-300):e.sprite.x>this.sprite.x?this.sprite.setAccelerationX(300):this.sprite.setAccelerationX(0)}die(){}}class r{constructor(e,t,s,i,a,r){this.scene=e,this.parent=i,this.sprite=e.physics.add.sprite(this.parent.sprite.x+64,this.parent.sprite.y,a,0).setDrag(1e3,0).setMaxVelocity(300,400).setSize(32,32).setOffset(0,0),this.maxHealth=r,this.health=r,this.healthBarWidth=50,this.censerSwing=1,this.censerDirection=1,console.log(this.censerDirection),this.graphics=e.add.graphics({lineStyle:{width:10,color:65280}}),this.healthBar=new Phaser.Geom.Line(this.sprite.x-20,this.sprite.y-this.sprite.height/2-16,this.sprite.x+20,this.sprite.y-this.sprite.height/2-16)}create(){this.isDying=!1,this.censerDirection=1,this.healthBar=new Phaser.Geom.Line(sprite.x-20,sprite.y-sprite.height/2,sprite.x+20,sprite.y-sprite.height/2),this.graphics.strokeLineShape(this.healthBar)}update(){this.censerDirection<.1?this.censerDirection+=.001:this.censerDirection=-.1,this.censerSwing+=this.censerDirection,console.log(this.censerDirection),this.sprite.setX(this.parent.sprite.x+100*Math.sin(this.censerSwing)),this.sprite.setY(this.parent.sprite.y-100*Math.cos(this.censerSwing)),this.sprite.rotation=this.censerSwing+Math.PI,this.graphics.clear(),Phaser.Geom.Line.CenterOn(this.healthBar,this.sprite.x,this.sprite.y-this.sprite.height/2-16);const e=Phaser.Display.Color.HSVColorWheel();this.graphics.lineStyle(10,e[Math.floor(this.health/this.maxHealth*128)].color),this.healthBar.x1=this.sprite.x-this.healthBarWidth/2,this.healthBar.x2=this.sprite.x-this.healthBarWidth/2+this.health/this.maxHealth*this.healthBarWidth,this.graphics.strokeLineShape(this.healthBar)}die(){}changeDirection(){this.censerDirection<0?this.censerDirection=.01:this.censerDirection=-.01}}class h{constructor(e,t,s,i,a,r,h){this.scene=e,this.averageX=(i.sprite.x+a.sprite.x)/2,this.averageY=(i.sprite.y+a.sprite.y)/2,this.sprite=e.physics.add.sprite(this.averageX,this.averageY,r,0).setDrag(1e3,0).setMaxVelocity(300,400).setSize(32,64).setOffset(0,0),this.parent1=i,this.parent2=a,this.maxHealth=h,this.health=0,this.healthBarWidth=50}create(){}update(){this.averageX=(this.parent1.sprite.x+this.parent2.sprite.x)/2,this.averageY=(this.parent1.sprite.y+this.parent2.sprite.y)/2,this.sprite.setX(this.averageX),this.sprite.setY(this.averageY),this.sprite.rotation=this.parent2.sprite.rotation}die(){}}const n={type:Phaser.AUTO,width:800,height:600,parent:\"game-container\",pixelArt:!0,backgroundColor:\"#200020\",scene:[class extends Phaser.Scene{constructor(){super(\"MainMenu\")}preload(){this.load.bitmapFont(\"atari\",\"assets/fonts/atari-smooth.png\",\"assets/fonts/atari-smooth.xml\")}create(){this.cameras.main.setBackgroundColor(\"#000000\"),this.add.bitmapText(230,275,\"atari\").setText(\"pewstrider\"),this.input.on(\"pointerdown\",()=>this.scene.start(\"GameScene\"))}update(e,t){}},class extends Phaser.Scene{constructor(){super(\"GameScene\"),this.gamePaused=!1}preload(){this.load.spritesheet(\"player\",\"assets/atlas/player-1bit.png\",{frameWidth:32,frameHeight:64}),this.load.spritesheet(\"priestGreen\",\"assets/atlas/ordinary-time-priest-1bit.png\",{frameWidth:32,frameHeight:64}),this.load.image(\"censer\",\"assets/images/censer-1bit.png\"),this.load.image(\"censerChain\",\"assets/images/censer-chain-1bit.png\"),this.load.image(\"smoke\",\"assets/images/smoke-1bit.png\"),this.load.image(\"tabernacle\",\"assets/images/tabernacle-1bit.png\"),this.load.spritesheet(\"sanctuaryLamp\",\"assets/atlas/sanctuary-lamp-1bit.png\",{frameWidth:32,frameHeight:32}),this.load.image(\"pauseButton\",\"assets/images/pause-button-1bit.png\"),this.load.image(\"tiles\",\"assets/tilesets/tiles_1bit_32x32.png\"),this.load.tilemapTiledJSON(\"map\",\"assets/tilemaps/level1-1bit.json\")}create(){const e=this.make.tilemap({key:\"map\"}),t=e.addTilesetImage(\"tiles_1bit_32x32\",\"tiles\");this.walls=e.createDynamicLayer(\"walls\",t),this.windows=e.createDynamicLayer(\"windows\",t),this.blocks=e.createDynamicLayer(\"blocks\",t);const s=e.findObject(\"objects\",e=>\"playerSpawn\"===e.name);this.player=new i(this,s.x,s.y,100),this.blocks.setCollisionByProperty({collides:!0}),this.blocks.forEachTile(e=>{6===e.index&&(e.collideLeft=!1,e.collideRight=!1,e.collideBottom=!0)}),this.physics.world.addCollider(this.player.sprite,this.blocks),e.findObject(\"objects\",e=>\"priest1Spawn\"===e.name),this.priest1=new a(this,200,900,\"priestGreen\",120),this.physics.world.addCollider(this.priest1.sprite,this.blocks),this.censer1=new r(this,this.priest1.x+64,this.priest1.y,this.priest1,\"censer\",120),this.physics.world.addCollider(this.censer1.sprite,this.blocks,this.censer1.changeDirection,null,this),this.physics.world.addCollider(this.player.sprite,this.censer1.sprite,null,null,this),this.censerChain1=new h(this,this.priest1.sprite.x,this.priest1.sprite.y,this.priest1,this.censer1,\"censerChain\",120),this.particles=this.add.particles(\"smoke\"),this.emitter=this.particles.createEmitter({alpha:{start:1,end:0},gravityY:-100}),this.emitter.setPosition(this.censer1.sprite.x,this.censer1.sprite.y),this.emitter.setSpeed(40),this.emitter.setAlpha(.5),this.emitter.setFrequency(1,20),this.emitter.setBlendMode(Phaser.BlendModes.DARKEN),this.tabernacle=this.physics.add.sprite(2e3,848,\"tabernacle\",0).setImmovable(),this.physics.world.addCollider(this.tabernacle,this.blocks),this.physics.world.addCollider(this.player.sprite,this.tabernacle,this.goToNextLevel,null,this),this.sanctuaryLamp=this.physics.add.sprite(1616,784,\"sanctuaryLamp\",0).setImmovable(),this.sanctuaryLamp.body.setAllowGravity(!1),this.anims.create({key:\"sanctuaryLamp\",frames:this.anims.generateFrameNumbers(\"sanctuaryLamp\",{start:0,end:1}),frameRate:8,repeat:-1}),this.sanctuaryLamp.anims.play(\"sanctuaryLamp\",!0),this.cameras.main.startFollow(this.player.sprite),this.cameras.main.setBounds(0,0,e.widthInPixels,e.heightInPixels),this.pauseButton=this.add.image(16,16,\"pauseButton\").setScrollFactor(0).setInteractive(),this.pauseButton.name=\"pauseButton\",this.input.on(\"gameobjectdown\",(e,t)=>{\"pauseButton\"==t.name&&(console.log(\"pausing\"),this.scene.switch(\"PauseMenu\",{levelName:\"GameScene\"}))})}goToNextLevel(){this.scene.stop(),this.scene.start(\"Level2\")}update(e,t){this.emitter.setPosition(this.censer1.sprite.x,this.censer1.sprite.y);var s=this.blocks.getTileAtWorldXY(this.player.sprite.x,this.player.sprite.y+32);this.player.update(s),this.priest1.update(this.player),this.censer1.update(),this.censerChain1.update(),this.physics.world.overlap(this.player.sprite,this.censer1.sprite)&&this.player.takeDamage(25),this.player.isDead&&this.scene.restart()}},class extends Phaser.Scene{constructor(){super(\"Level2\"),this.gamePaused=!1}preload(){this.load.spritesheet(\"player\",\"assets/atlas/player.png\",{frameWidth:32,frameHeight:64}),this.load.spritesheet(\"priestGreen\",\"assets/atlas/priest-green.png\",{frameWidth:32,frameHeight:64}),this.load.image(\"censer\",\"assets/images/censer.png\"),this.load.image(\"censerChain\",\"assets/images/censer-chain.png\"),this.load.image(\"smoke\",\"assets/images/smoke.png\"),this.load.image(\"tabernacle\",\"assets/images/tabernacle.png\"),this.load.spritesheet(\"sanctuaryLamp\",\"assets/atlas/sanctuary-lamp.png\",{frameWidth:32,frameHeight:32}),this.load.image(\"pauseButton\",\"assets/images/pause-button.png\"),this.load.image(\"tiles\",\"assets/tilesets/tiles_32x32.png\"),this.load.tilemapTiledJSON(\"level2\",\"assets/tilemaps/testlevel.json\")}create(){const e=this.make.tilemap({key:\"level2\"}),t=e.addTilesetImage(\"tiles_32x32\",\"tiles\");this.walls=e.createDynamicLayer(\"walls\",t),this.blocks=e.createDynamicLayer(\"blocks\",t);const s=e.findObject(\"objects\",e=>\"playerSpawn\"===e.name);this.player=new i(this,s.x,s.y,100),this.blocks.setCollisionByProperty({collides:!0}),this.blocks.forEachTile(e=>{6===e.index&&(e.collideLeft=!1,e.collideRight=!1,e.collideBottom=!0)}),this.physics.world.addCollider(this.player.sprite,this.blocks),e.findObject(\"objects\",e=>\"priest1Spawn\"===e.name),this.priest1=new a(this,200,900,\"priestGreen\",120),this.physics.world.addCollider(this.priest1.sprite,this.blocks),this.censer1=new r(this,this.priest1.x+64,this.priest1.y,this.priest1,\"censer\",120),this.physics.world.addCollider(this.censer1.sprite,this.blocks,this.censer1.changeDirection,null,this),this.physics.world.addCollider(this.player.sprite,this.censer1.sprite,null,null,this),this.censerChain1=new h(this,this.priest1.sprite.x,this.priest1.sprite.y,this.priest1,this.censer1,\"censerChain\",120),this.particles=this.add.particles(\"smoke\"),this.emitter=this.particles.createEmitter({alpha:{start:1,end:0}}),this.emitter.setPosition(this.censer1.sprite.x,this.censer1.sprite.y),this.emitter.setSpeed(40),this.emitter.setAlpha(.5),this.emitter.setFrequency(1,20),this.emitter.setBlendMode(Phaser.BlendModes.DARKEN),this.tabernacle=this.physics.add.sprite(2e3,848,\"tabernacle\",0).setImmovable(),this.physics.world.addCollider(this.tabernacle,this.blocks),this.physics.world.addCollider(this.player.sprite,this.tabernacle,this.goToNextLevel,null,this),this.sanctuaryLamp=this.physics.add.sprite(1616,784,\"sanctuaryLamp\",0).setImmovable(),this.sanctuaryLamp.body.setAllowGravity(!1),this.anims.create({key:\"sanctuaryLamp\",frames:this.anims.generateFrameNumbers(\"sanctuaryLamp\",{start:0,end:1}),frameRate:8,repeat:-1}),this.sanctuaryLamp.anims.play(\"sanctuaryLamp\",!0),this.cameras.main.startFollow(this.player.sprite),this.cameras.main.setBounds(0,0,e.widthInPixels,e.heightInPixels),this.pauseButton=this.add.image(16,16,\"pauseButton\").setScrollFactor(0).setInteractive(),this.pauseButton.name=\"pauseButton\",this.input.on(\"gameobjectdown\",(e,t)=>{\"pauseButton\"==t.name&&(console.log(\"pausing\"),this.scene.switch(\"PauseMenu\",{levelName:\"Level2\"}))})}goToNextLevel(){this.scene.start(\"Ending\")}update(e,t){this.emitter.setPosition(this.censer1.sprite.x,this.censer1.sprite.y);var s=this.blocks.getTileAtWorldXY(this.player.sprite.x,this.player.sprite.y+32);this.player.update(s),this.priest1.update(this.player),this.censer1.update(),this.censerChain1.update(),this.physics.world.overlap(this.player.sprite,this.censer1.sprite)&&this.player.takeDamage(25),this.player.isDead&&this.scene.restart()}},class extends Phaser.Scene{constructor(){super(\"Ending\")}preload(){}create(){console.log(\"ending\"),this.cameras.main.setBackgroundColor(\"#ffffff\"),this.add.text(400,300,\"you won\",{font:\"16px sans serif\",fill:\"#000000\",padding:{x:0,y:0},backgroundColor:\"#ffffff\"}).setScrollFactor(0)}update(e,t){}},class extends Phaser.Scene{constructor(e){super(\"PauseMenu\")}init(e){this.levelName=e.levelName}preload(){}create(){console.log(\"paused\"),this.add.text(230,275,\"paused\",{font:\"72px serif\",fill:\"#808080\",padding:{x:0,y:0},backgroundColor:\"#404040\"}).setScrollFactor(0),this.input.on(\"pointerdown\",()=>this.scene.switch(\"GameScene\",{levelName:\"PauseMenu\"}))}update(e,t){}}],physics:{default:\"arcade\",arcade:{gravity:{y:1e3}}}};new Phaser.Game(n)}]);","extractedComments":[]}